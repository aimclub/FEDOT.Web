{"version":3,"file":"947.chunk.js","mappings":"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","sources":["webpack://fedot/./node_modules/@mui/material/utils/useId.js","webpack://fedot/./src/API/showcase/showcaseAPI.ts","webpack://fedot/./src/components/UI/tooltip/CustomTooltip.tsx","webpack://fedot/./src/pages/showcase/showcasePage.module.scss?231f","webpack://fedot/./src/pages/showcase/cases/showcaseCases.module.scss?c223","webpack://fedot/./src/pages/showcase/cases/card/showcaseCasesCard.module.scss?e1c8","webpack://fedot/./src/pages/showcase/cases/card/ShowcaseCasesCard.tsx","webpack://fedot/./src/pages/showcase/cases/ShowcaseCases.tsx","webpack://fedot/./src/pages/showcase/info/showcaseInfo.module.scss?b61f","webpack://fedot/./src/pages/showcase/info/details/showcaseInfoDetails.module.scss?caf2","webpack://fedot/./src/pages/showcase/info/details/ShowcaseInfoDetails.tsx","webpack://fedot/./src/pages/showcase/info/ShowcaseInfo.tsx","webpack://fedot/./src/pages/showcase/ShowcasePage.tsx","webpack://fedot/./src/utils/classnames.ts"],"sourcesContent":["import { unstable_useId as useId } from '@mui/utils';\nexport default useId;","import { commonApi } from \"../baseURL\";\nimport { ICase, ICaseItem } from \"./showcaseInterface\";\n\nexport const showcaseAPI = commonApi.injectEndpoints({\n  endpoints: (build) => ({\n    getAllShowcases: build.query<ICaseItem[], undefined>({\n      query: () => ({ url: \"showcase/\" }),\n    }),\n    getShowcase: build.query<ICase, { caseId: string }>({\n      query: ({ caseId }) => ({\n        url: `/showcase/items/${caseId}`,\n      }),\n    }),\n  }),\n});\n","import Tooltip from \"@mui/material/Tooltip\";\nimport { styled } from \"@mui/material/styles\";\n\nconst CustomTooltip = styled(Tooltip)({\n  tooltip: {\n    margin: \"30px 0 0\",\n  },\n});\n\nexport default CustomTooltip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xa9cNRPW\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZArlvdyl\",\"title\":\"K7DgQFNE\",\"cases\":\"tU6anRpx\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"t9XCVZwV\",\"button\":\"x84wsWpn\",\"image\":\"S4rvj9Vv\",\"caption\":\"nxL9iVxk\",\"title\":\"Bw02JMkj\"};","import scss from \"./showcaseCasesCard.module.scss\";\n\nimport { FC, memo, useCallback } from \"react\";\n\nimport Button from \"@mui/material/Button\";\nimport { useDispatch } from \"react-redux\";\n\nimport { staticAPI } from \"../../../../API/baseURL\";\nimport { ICaseItem } from \"../../../../API/showcase/showcaseInterface\";\nimport { setSelectedShowcase } from \"../../../../redux/showCase/showcaseSlice\";\n\nconst ShowcaseCasesCard: FC<{ showcase: ICaseItem }> = ({ showcase }) => {\n  const dispatch = useDispatch();\n\n  const handleExpand = useCallback(() => {\n    dispatch(setSelectedShowcase({ caseId: showcase.case_id }));\n  }, [showcase.case_id, dispatch]);\n\n  return (\n    <article className={scss.root}>\n      <img\n        src={staticAPI.getImage(showcase.icon_path)}\n        alt={showcase.title}\n        className={scss.image}\n      />\n      <div className={scss.caption}>\n        <h3 className={scss.title}>{showcase.title}</h3>\n        <Button className={scss.button} onClick={handleExpand}>\n          Expand\n        </Button>\n      </div>\n    </article>\n  );\n};\n\nexport default memo(ShowcaseCasesCard);\n","import scss from \"./showcaseCases.module.scss\";\n\nimport Fade from \"@mui/material/Fade\";\n\nimport { showcaseAPI } from \"../../../API/showcase/showcaseAPI\";\nimport ShowcaseCasesCard from \"./card/ShowcaseCasesCard\";\n\nconst ShowcaseCases = () => {\n  const { data: cases } = showcaseAPI.useGetAllShowcasesQuery(undefined);\n\n  return (\n    <Fade in={!!cases} mountOnEnter unmountOnExit timeout={2000}>\n      <section className={scss.root}>\n        <h2 className={scss.title}>Case</h2>\n        <div className={scss.cases}>\n          {cases?.map((showcase) => (\n            <ShowcaseCasesCard key={showcase.case_id} showcase={showcase} />\n          ))}\n        </div>\n      </section>\n    </Fade>\n  );\n};\n\nexport default ShowcaseCases;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P3bpxD1t\",\"hidden\":\"ZpKsSBkg\",\"paper\":\"t8YkuYCj\",\"title\":\"rFRDe8IR\",\"info\":\"f_CGCzBH\",\"subTitle\":\"hmJQBWet\",\"image\":\"q7tEw2Gm\",\"description\":\"SxFVO6Rv\",\"bottom\":\"k1vitT5s\",\"link\":\"fqK4mURX\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mZXI9EnY\",\"item\":\"m2KZ74uG\",\"metric\":\"WaHY2XEN\",\"value\":\"CZchqHTz\"};","import scss from \"./showcaseInfoDetails.module.scss\";\n\nimport { FC } from \"react\";\n\nimport { cl } from \"../../../../utils/classnames\";\nimport CustomTooltip from \"../../../../components/UI/tooltip/CustomTooltip\";\n\nconst ShowcaseInfoDetails: FC<{\n  className?: string;\n  details: Record<string, number>;\n}> = ({ details, className }) => {\n  return (\n    <div className={cl(scss.root, className)}>\n      {Object.entries(details).map((metric) => (\n        <CustomTooltip\n          key={metric[0]}\n          title={`${metric[0]}: ${metric[1]}`}\n          placement=\"top\"\n          arrow\n        >\n          <div className={scss.item}>\n            <p className={scss.metric}>{metric[0]}</p>\n            <p className={scss.value}>{metric[1]}</p>\n          </div>\n        </CustomTooltip>\n      ))}\n    </div>\n  );\n};\n\nexport default ShowcaseInfoDetails;\n","import scss from \"./showcaseInfo.module.scss\";\n\nimport { useEffect } from \"react\";\n\nimport Fade from \"@mui/material/Fade\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { staticAPI } from \"../../../API/baseURL\";\nimport { showcaseAPI } from \"../../../API/showcase/showcaseAPI\";\nimport { useAppSelector } from \"../../../hooks/redux\";\nimport { setSelectedShowcase } from \"../../../redux/showCase/showcaseSlice\";\nimport { goToPage } from \"../../../router/routes\";\nimport { cl } from \"../../../utils/classnames\";\nimport ShowcaseInfoDetails from \"./details/ShowcaseInfoDetails\";\n\nconst ShowcaseInfo = () => {\n  const dispatch = useDispatch();\n  const { selected_showcase_id } = useAppSelector((state) => state.showcase);\n\n  const {\n    data: showcase,\n    isFetching,\n    isError,\n  } = showcaseAPI.useGetShowcaseQuery(\n    { caseId: selected_showcase_id },\n    { skip: !selected_showcase_id }\n  );\n\n  useEffect(() => {\n    if (isError) dispatch(setSelectedShowcase({ caseId: \"\" }));\n  }, [dispatch, isError]);\n\n  return (\n    <section className={cl(scss.root, !selected_showcase_id && scss.hidden)}>\n      {!isFetching ? (\n        <Fade in={!isFetching} timeout={1000}>\n          <div className={scss.paper}>\n            <h2 className={scss.title}>{showcase?.title}</h2>\n            <div className={scss.info}>\n              <p className={scss.subTitle}>Model structure</p>\n              <p className={scss.subTitle}>Model details</p>\n              <img\n                src={staticAPI.getImage(showcase?.icon_path || \"\")}\n                alt={showcase?.title}\n                className={scss.image}\n              />\n\n              <ShowcaseInfoDetails details={showcase?.details || {}} />\n\n              <p className={scss.description}>{showcase?.description}</p>\n\n              <div className={scss.bottom}>\n                <Link\n                  to={goToPage.sandbox(selected_showcase_id)}\n                  className={scss.link}\n                >\n                  Edit in Sandbox\n                </Link>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      ) : (\n        <></>\n      )}\n    </section>\n  );\n};\n\nexport default ShowcaseInfo;\n","import scss from \"./showcasePage.module.scss\";\n\nimport ShowcaseCases from \"./cases/ShowcaseCases\";\nimport ShowcaseInfo from \"./info/ShowcaseInfo\";\n\nconst ShowCase = () => {\n  return (\n    <div className={scss.root}>\n      <ShowcaseInfo />\n      <ShowcaseCases />\n    </div>\n  );\n};\n\nexport default ShowCase;\n","export const cl = (\n  ...classes: Array<string | boolean | undefined | null>\n): string => classes.map((item) => item || undefined).join(\" \");\n"],"names":["showcaseAPI","commonApi","endpoints","build","getAllShowcases","query","url","getShowcase","_ref","caseId","concat","CustomTooltip","styled","Tooltip","tooltip","margin","ShowcaseCasesCard","showcase","dispatch","useDispatch","handleExpand","useCallback","setSelectedShowcase","case_id","_jsxs","className","scss","children","_jsx","src","staticAPI","icon_path","alt","title","Button","onClick","memo","cases","undefined","data","Fade","in","mountOnEnter","unmountOnExit","timeout","map","details","cl","Object","entries","metric","placement","arrow","selected_showcase_id","useAppSelector","state","_showcaseAPI$useGetSh","skip","isFetching","isError","useEffect","_Fragment","ShowcaseInfoDetails","description","Link","to","goToPage","ShowcaseInfo","ShowcaseCases","_len","arguments","length","classes","Array","_key","item","join"],"sourceRoot":""}