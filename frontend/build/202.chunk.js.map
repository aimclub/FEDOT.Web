{"version":3,"file":"202.chunk.js","mappings":"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","sources":["webpack://fedot/./src/API/analytics/analyticsAPI.ts","webpack://fedot/./src/API/pipeline/pipelineAPI.ts","webpack://fedot/./src/components/UI/loaders/app/appLoader.module.scss?8cf7","webpack://fedot/./src/components/UI/loaders/app/AppLoader.tsx","webpack://fedot/./src/components/UI/tooltip/CustomTooltip.tsx","webpack://fedot/./src/hooks/useAppParams.ts","webpack://fedot/./src/pages/history/generation/historyGeneration.module.scss?6ac8","webpack://fedot/./src/pages/history/generation/boxplot/historyGenerationBoxplot.module.scss?1caf","webpack://fedot/./src/pages/history/generation/boxplot/HistoryGenerationBoxplot.tsx","webpack://fedot/./src/pages/history/generation/HistoryGeneration.tsx","webpack://fedot/./src/pages/history/graph/HistoryGraph.module.scss?aff0","webpack://fedot/./src/API/composer/composerAPI.ts","webpack://fedot/./src/utils/historyGraphGenerator.ts","webpack://fedot/./src/pages/history/modal/historyModal.module.scss?b785","webpack://fedot/./src/pages/history/modal/HistoryModal.tsx","webpack://fedot/./src/pages/history/graph/HistoryGraph.tsx","webpack://fedot/./src/pages/history/historyPage.module.scss?6b6d","webpack://fedot/./src/pages/history/HistoryPage.tsx","webpack://fedot/./src/utils/classnames.ts"],"sourcesContent":["import { commonApi } from \"../baseURL\";\nimport {\n  GenerationType,\n  IGeneration,\n  IMetric,\n  IResult,\n} from \"./analyticsInterface\";\n\nexport const analyticsAPI = commonApi.injectEndpoints({\n  endpoints: (build) => ({\n    getCaseMetric: build.query<IMetric, { caseId: string }>({\n      query: ({ caseId }) => ({\n        url: `/analytics/quality/${caseId}`,\n      }),\n    }),\n    getPipelineResult: build.query<\n      IResult,\n      { caseId: string; pipeline_uid: string }\n    >({\n      query: ({ caseId, pipeline_uid }) => ({\n        url: `/analytics/results/${caseId}/${pipeline_uid}`,\n      }),\n    }),\n    getGenerations: build.query<\n      IGeneration,\n      { caseId: string; type: GenerationType }\n    >({\n      query: ({ caseId, type }) => ({\n        url: `/analytics/generations/${caseId}/${type}`,\n      }),\n    }),\n  }),\n});\n","import { commonApi } from \"../baseURL\";\nimport {\n  IAdd,\n  IPipeline,\n  IPipelineImage,\n  IValidate,\n} from \"./pipelineInterface\";\n\nexport const pipelineAPI = commonApi.injectEndpoints({\n  endpoints: (build) => ({\n    getPipeline: build.query<IPipeline, { uid: string }>({\n      query: ({ uid }) => ({\n        url: `/pipelines/${uid}`,\n      }),\n      providesTags: [\"case\"],\n    }),\n    validatePipeline: build.mutation<IValidate, IPipeline>({\n      query: (pipeline) => ({\n        url: `/pipelines/validate`,\n        method: \"POST\",\n        body: {\n          uid: pipeline.uid,\n          nodes: pipeline.nodes,\n          edges: pipeline.edges,\n        },\n      }),\n    }),\n    addPipeline: build.mutation<IAdd, IPipeline>({\n      query: (pipeline) => ({\n        url: `/pipelines/add`,\n        method: \"POST\",\n        body: {\n          uid: pipeline.uid,\n          nodes: pipeline.nodes,\n          edges: pipeline.edges,\n        },\n      }),\n    }),\n    getPipelineImage: build.query<IPipelineImage, { uid: string }>({\n      query: ({ uid }) => ({\n        url: `/pipelines/image/${uid}`,\n      }),\n      providesTags: [\"case\"],\n    }),\n  }),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"blackout\":\"mFqXDJcs\"};","import scss from \"./appLoader.module.scss\";\n\nimport { FC } from \"react\";\nimport { MutatingDots as Loader } from \"react-loader-spinner\";\n\nimport { cl } from \"../../../../utils/classnames\";\n\nconst AppLoader: FC<{ hasBlackout?: boolean; className?: string }> = ({\n  hasBlackout = false,\n  className,\n}) => {\n  return (\n    <div className={cl(hasBlackout && scss.blackout, className)}>\n      <Loader\n        color=\"#94CE45\"\n        secondaryColor=\"#263238\"\n        height={100}\n        width={100}\n      />\n    </div>\n  );\n};\n\nexport default AppLoader;\n","import Tooltip from \"@mui/material/Tooltip\";\nimport { styled } from \"@mui/material/styles\";\n\nconst CustomTooltip = styled(Tooltip)({\n  tooltip: {\n    margin: \"30px 0 0\",\n  },\n});\n\nexport default CustomTooltip;\n","import { useParams } from \"react-router-dom\";\n\nexport const useAppParams = () => useParams<\"caseId\">();\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ESXDcPrk\",\"tabs\":\"K57SO4J1\",\"tab\":\"T3tqNuae\",\"active\":\"zVmuYMfM\",\"content\":\"y3GfwsyX\"};","// extracted by mini-css-extract-plugin\nexport default {\"empty\":\"qJiOQeeJ\"};","import scss from \"./historyGenerationBoxplot.module.scss\";\n\nimport { FC, memo, useMemo } from \"react\";\n\nimport type { BoxPlotData } from \"plotly.js\";\nimport Plot from \"react-plotly.js\";\n\nimport { IGeneration } from \"../../../../API/analytics/analyticsInterface\";\n\nconst HistoryGenerationBoxplot: FC<{\n  generation?: IGeneration;\n}> = ({ generation }) => {\n  const data = useMemo<Partial<BoxPlotData>[]>(\n    () =>\n      generation?.series\n        .slice()\n        .reverse()\n        .map((i) => ({ ...i, name: `${i.name} epoch` })) || [],\n\n    [generation]\n  );\n\n  return generation ? (\n    <Plot\n      data={data}\n      layout={{\n        margin: { t: 20, b: 40, l: 80, r: 24 },\n        width: 412,\n        height: 150 + 40 * data.length,\n        showlegend: false,\n        yaxis: { fixedrange: true },\n        xaxis: { fixedrange: true, rangemode: \"normal\" },\n      }}\n      config={{\n        displayModeBar: false,\n      }}\n    />\n  ) : (\n    <p className={scss.empty}>no data</p>\n  );\n};\n\nexport default memo(HistoryGenerationBoxplot);\n","import scss from \"./historyGeneration.module.scss\";\n\nimport { useState } from \"react\";\n\nimport { analyticsAPI } from \"../../../API/analytics/analyticsAPI\";\nimport { GenerationType } from \"../../../API/analytics/analyticsInterface\";\nimport AppLoader from \"../../../components/UI/loaders/app/AppLoader\";\nimport { useAppParams } from \"../../../hooks/useAppParams\";\nimport { cl } from \"../../../utils/classnames\";\nimport HistoryGenerationBoxplot from \"./boxplot/HistoryGenerationBoxplot\";\n\nconst BUTTONS: { name: string; type: GenerationType }[] = [\n  {\n    name: \"Phenothypic convergence\",\n    type: \"pheno\",\n  },\n  { name: \"Genotypic convergence\", type: \"geno\" },\n];\n\nconst HistoryGeneration = () => {\n  const [generationType, setGenerationType] = useState<GenerationType>(\"pheno\");\n  const { caseId } = useAppParams();\n  const { isFetching, data, isError } = analyticsAPI.useGetGenerationsQuery(\n    { caseId: caseId || \"\", type: generationType },\n    { skip: !caseId }\n  );\n\n  return (\n    <section className={scss.root}>\n      <div className={scss.tabs}>\n        {BUTTONS.map((item) => (\n          <button\n            type=\"button\"\n            key={item.type}\n            className={cl(\n              scss.tab,\n              item.type === generationType && scss.active\n            )}\n            onClick={() => setGenerationType(item.type)}\n          >\n            <span>{item.name}</span>\n          </button>\n        ))}\n      </div>\n\n      <div className={scss.content}>\n        {isFetching ? (\n          <AppLoader />\n        ) : (\n          <HistoryGenerationBoxplot generation={isError ? undefined : data} />\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default HistoryGeneration;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_JT1YDCC\",\"center\":\"Z39I7Lq7\",\"empty\":\"Ph8QPBES\",\"tools\":\"cp6Pfs64\",\"button\":\"o_F2MSfZ\",\"graph\":\"iyWka4gj\"};","import { commonApi } from \"../baseURL\";\nimport { IHistoryGraph } from \"./composerInterface\";\n\nexport const composerAPI = commonApi.injectEndpoints({\n  endpoints: (build) => ({\n    getHistoryGraph: build.query<IHistoryGraph, { caseId: string }>({\n      query: ({ caseId }) => ({\n        url: `/composer/${caseId}`,\n      }),\n      providesTags: [\"case\"],\n    }),\n  }),\n});\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// TODO: any in createHistoryGraph\n\nimport * as d3 from \"d3\";\nimport dagreD3 from \"dagre-d3\";\nimport {\n  IHistoryEdge,\n  IHistoryNodeIndividual,\n  IHistoryNodeOperator,\n} from \"../API/composer/composerInterface\";\n\n// TODO: refactor createHistoryGraph\n\nexport type ZoomType = { x: number; y: number; k: number } | undefined;\n\nexport const createHistoryGraph = (\n  container: HTMLDivElement,\n  linksData: IHistoryEdge[],\n  nodesData: (IHistoryNodeIndividual | IHistoryNodeOperator)[],\n  highlightNodes: string[],\n  onClickPipeline: (value: IHistoryNodeIndividual) => void,\n  onDblClickPipeline: (value: IHistoryNodeIndividual) => void,\n  { zoom, setZoom }: { zoom: ZoomType; setZoom: (v: ZoomType) => void }\n) => {\n  const links = linksData.map((d) => ({ ...d }));\n  const nodesIndividual = nodesData.filter(\n    (item) => item.type === \"individual\"\n  ) as IHistoryNodeIndividual[];\n  const nodesOperator = nodesData.filter(\n    (item) => item.type === \"evo_operator\"\n  ) as IHistoryNodeOperator[];\n\n  const uniqGenerations = Array.from(\n    new Set(nodesIndividual.map((item) => item.gen_id))\n  );\n\n  const { height, width } = container.getBoundingClientRect();\n\n  const svg = d3\n    .select(container)\n    .append(\"svg\")\n    .attr(\"class\", \"history-graph\")\n    .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\n    .call(\n      d3.zoom().on(\"zoom\", function (event) {\n        svgGroup.attr(\"transform\", event.transform);\n        // console.log(event.transform);\n        setZoom(event.transform as ZoomType);\n      }) as any\n    );\n\n  const svgGroup = svg\n    .append(\"g\")\n    .on(\"click\", (event) => {\n      if (event.target) {\n        event.stopPropagation();\n        const node = nodesIndividual.find(\n          (item) => item.uid === event.target.textContent\n        );\n        if (node) onClickPipeline(node);\n      }\n    })\n    .on(\"dblclick\", (event) => {\n      if (event.target) {\n        event.stopPropagation();\n        const node = nodesIndividual.find(\n          (item) => item.uid === event.target.textContent\n        );\n        if (node) onDblClickPipeline(node);\n      }\n    });\n\n  const g = new dagreD3.graphlib.Graph({ compound: true })\n    .setGraph({\n      rankdir: \"TB\",\n      ranker: \"network-simplex\",\n      align: \"DL\",\n    })\n    .setDefaultEdgeLabel(() => ({}));\n\n  uniqGenerations.forEach((generation) => {\n    const nameG = `Generation ${generation}`;\n\n    g.setNode(`${generation}`, {\n      label: generation,\n      labelStyle: \"cursor: default;\",\n      clusterLabelPos: \"left\",\n      style: \"fill: #d3d7e8; cursor: default;\",\n    });\n    g.setNode(nameG, {\n      label: nameG,\n    });\n    g.setParent(nameG, String(generation));\n\n    nodesIndividual.forEach((item) => {\n      if (generation === item.gen_id) {\n        g.setNode(item.uid, {\n          label: item.uid,\n          labelStyle: \"font-size: 36px; cursor: pointer;\",\n          class: `type-TK ${highlightNodes.includes(item.uid) && \"highlight\"}`,\n          shape: \"rect\",\n        });\n\n        g.setParent(item.uid, String(generation));\n      }\n    });\n  });\n\n  nodesOperator.forEach((item) => {\n    const label = item.name[0][0].toUpperCase();\n    g.setNode(item.uid, {\n      label: label,\n      labelStyle: \"font-size: 60px; cursor: default;\",\n      class: `operator-${label} ${\n        highlightNodes.includes(item.uid) && \"highlight\"\n      }`,\n      shape: \"circle\",\n    });\n  });\n\n  g.nodes().forEach(function (v) {\n    const node = g.node(v);\n    // Round the corners of the nodes\n    node.rx = node.ry = 5;\n  });\n\n  // Set up edges, no special attributes.\n  links.forEach((item) => {\n    const haveSource = g.hasNode(item.source);\n    const haveTarget = g.hasNode(item.target);\n    if (haveSource && haveTarget) {\n      g.setEdge(item.source, item.target, {\n        // style: \"stroke: #007DFF; stroke-width: 4px; fill-opacity: 0\",\n        // arrowheadStyle: \"fill: #007DFF\",\n        curve: d3.curveBasis,\n        class: `${\n          highlightNodes.includes(item.source) &&\n          highlightNodes.includes(item.target) &&\n          \"highlight\"\n        }`,\n      });\n    }\n  });\n\n  // Create the renderer\n  const render = new dagreD3.render();\n\n  // Run the renderer. This is what draws the final graph.\n  render(svgGroup as any, g as any);\n\n  // Center the graph\n  const gHeight = (g.graph() as any).height;\n  const gWidth = (g.graph() as any).width;\n\n  if (height < gHeight || width < gWidth) {\n    const viewHeight = height < gHeight ? gHeight : height;\n    const viewWidth = width < gWidth ? gWidth : width;\n\n    svg.attr(\"viewBox\", [\n      -viewWidth / 2,\n      -viewHeight / 2,\n      viewWidth,\n      viewHeight,\n    ]);\n  }\n\n  if (!zoom) {\n    const xCenterOffset = (+svg.attr(\"width\") - gWidth) / 2;\n    const yCenterOffset = (+svg.attr(\"height\") - gHeight) / 2;\n\n    svgGroup.attr(\n      \"transform\",\n      \"translate(\" + xCenterOffset + \",\" + yCenterOffset + \")\"\n    );\n  } else {\n    svgGroup.attr(\n      \"transform\",\n      `translate(${zoom.x},${zoom.y}) scale(${zoom.k})`\n    );\n  }\n\n  /**\n   * Блок добавления и удаления подсказки на Граф\n   */\n  // const tooltip = document.querySelector(\"#graph-tooltip\");\n  // if (!tooltip) {\n  //   const tooltipDiv = document.createElement(\"div\");\n  //   tooltipDiv.classList.add(styles.tooltip);\n  //   tooltipDiv.style.opacity = \"0\";\n  //   tooltipDiv.id = \"graph-tooltip\";\n  //   document.body.appendChild(tooltipDiv);\n  // }\n  // const div = d3.select(\"#graph-tooltip\");\n\n  // //показать рядом с нужным Узлом\n  // const addTooltip = (hoverTooltip, d, x, y) => {\n  //   div.transition().duration(200).style(\"opacity\", 0.9);\n  //   div\n  //     .html(hoverTooltip(d))\n  //     .style(\"left\", `${x}px`)\n  //     .style(\"top\", `${y - 28}px`);\n  // };\n  // //скрыть\n  // const removeTooltip = () => {\n  //   div.transition().duration(200).style(\"opacity\", 0);\n  // };\n  /**\n   * Конец блока добавления и удаления Подсказки\n   */\n\n  // svgGroup.selectAll(\"g.node\");\n  // .on(\"mouseover\", (event, d) => {\n  //   addTooltip(nodeHoverTooltip, d, event.pageX, event.pageY);\n  // })\n  // .on(\"mouseout\", () => {\n  //   removeTooltip();\n  // });\n\n  return {\n    destroy: () => {\n      svg.remove();\n    },\n    nodes: () => {\n      return svg.node();\n    },\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"CSyYrYyl\",\"title\":\"zc808r0O\",\"cose\":\"lxS4rjWE\",\"content\":\"nJF7Weup\",\"image\":\"YccgNpqh\",\"empty\":\"qXe0KnZi\",\"bottom\":\"CEqakG3C\",\"button\":\"QnImg1T9\",\"cancel\":\"Qz5Jq6vX\",\"submit\":\"UcNvPeBF\"};","import scss from \"./historyModal.module.scss\";\n\nimport { FC, useCallback } from \"react\";\n\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { staticAPI } from \"../../../API/baseURL\";\nimport { IHistoryNodeIndividual } from \"../../../API/composer/composerInterface\";\nimport { pipelineAPI } from \"../../../API/pipeline/pipelineAPI\";\nimport AppLoader from \"../../../components/UI/loaders/app/AppLoader\";\nimport { setPipelineUid } from \"../../../redux/sandbox/sandboxSlice\";\nimport { cl } from \"../../../utils/classnames\";\n\nconst HistoryModal: FC<{\n  node: IHistoryNodeIndividual | null;\n  onClose: () => void;\n}> = ({ node, onClose }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleEditPipeline = useCallback(() => {\n    dispatch(setPipelineUid(node?.individual_id));\n    navigate(\"..\");\n  }, [dispatch, navigate, node?.individual_id]);\n\n  const { isFetching, data } = pipelineAPI.useGetPipelineImageQuery(\n    {\n      uid: node?.individual_id,\n    },\n    { skip: !node }\n  );\n\n  return (\n    <Dialog open={!!node} onClose={onClose}>\n      <div className={scss.header}>\n        <p className={scss.title}>{node?.uid}</p>\n        <IconButton onClick={onClose} className={\"scss.closeButton\"}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n\n      <div className={scss.content}>\n        {isFetching ? (\n          <AppLoader />\n        ) : data ? (\n          <img\n            className={scss.image}\n            src={staticAPI.getImage(data.image_url)}\n            alt={data.uid}\n          />\n        ) : (\n          <p className={scss.empty}>no data</p>\n        )}\n      </div>\n      <div className={scss.bottom}>\n        <Button className={cl(scss.button, scss.cancel)} onClick={onClose}>\n          cancel\n        </Button>\n        <Button\n          className={cl(scss.button, scss.submit)}\n          onClick={handleEditPipeline}\n          disabled={!data || isFetching}\n        >\n          edit\n        </Button>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default HistoryModal;\n","import scss from \"./HistoryGraph.module.scss\";\n\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport FormatColorResetIcon from \"@mui/icons-material/FormatColorReset\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport { composerAPI } from \"../../../API/composer/composerAPI\";\nimport { IHistoryNodeIndividual } from \"../../../API/composer/composerInterface\";\nimport AppLoader from \"../../../components/UI/loaders/app/AppLoader\";\nimport CustomTooltip from \"../../../components/UI/tooltip/CustomTooltip\";\nimport { useAppParams } from \"../../../hooks/useAppParams\";\nimport { cl } from \"../../../utils/classnames\";\nimport {\n  ZoomType,\n  createHistoryGraph,\n} from \"../../../utils/historyGraphGenerator\";\nimport HistoryModal from \"../modal/HistoryModal\";\n\nconst HistoryGraph = () => {\n  const graphRef = useRef<HTMLDivElement | null>(null);\n  const { caseId } = useAppParams();\n  const { isFetching, data, isError } = composerAPI.useGetHistoryGraphQuery(\n    { caseId: caseId || \"\" },\n    { skip: !caseId }\n  );\n  const [highlightPipelines, setHighlightPipelines] = useState<string[]>([]);\n  const [nodeModal, setNodeModal] = useState<IHistoryNodeIndividual | null>(\n    null\n  );\n  const zoom = useRef<ZoomType>();\n\n  const handleSelectReset = useCallback(() => {\n    setHighlightPipelines([]);\n  }, []);\n\n  const handleModalClose = useCallback(() => {\n    setNodeModal(null);\n  }, []);\n\n  useEffect(() => {\n    if (!graphRef.current || isFetching || !data) return;\n\n    const handlePipelineClick = (value: IHistoryNodeIndividual) => {\n      const arr: string[] = [value.uid];\n      const fun = (pipelineUid: string) => {\n        const t = data.edges\n          .filter((i) => i.target === pipelineUid)\n          .map((i) => i.source);\n        arr.push(...t);\n        t.forEach((i) => fun(i));\n      };\n      fun(value.uid);\n      setHighlightPipelines(arr);\n    };\n\n    const { destroy } = createHistoryGraph(\n      graphRef.current,\n      data.edges,\n      data.nodes,\n      highlightPipelines,\n      handlePipelineClick,\n      (node) => {\n        setNodeModal(node);\n      },\n      { zoom: zoom.current, setZoom: (v) => (zoom.current = v) }\n    );\n    return destroy;\n  }, [data, highlightPipelines, isFetching]);\n\n  return (\n    <section className={scss.root}>\n      <div ref={graphRef} className={scss.graph} />\n\n      {isFetching ? (\n        <AppLoader className={scss.center} />\n      ) : !data || isError ? (\n        <p className={cl(scss.empty, scss.center)}>no data</p>\n      ) : (\n        <CustomTooltip title=\"reset select\" placement=\"top-start\">\n          <span className={scss.tools}>\n            <IconButton\n              onClick={handleSelectReset}\n              className={scss.button}\n              disabled={highlightPipelines.length === 0}\n            >\n              <FormatColorResetIcon />\n            </IconButton>\n          </span>\n        </CustomTooltip>\n      )}\n\n      <HistoryModal node={nodeModal} onClose={handleModalClose} />\n    </section>\n  );\n};\n\nexport default HistoryGraph;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VZ51DBIe\"};","import HistoryGeneration from \"./generation/HistoryGeneration\";\nimport HistoryGraph from \"./graph/HistoryGraph\";\nimport scss from \"./historyPage.module.scss\";\n// import React, { FC, useEffect } from \"react\";\n// import { useDispatch } from \"react-redux\";\n\n// import { makeStyles } from \"@material-ui/core/styles\";\n\n// import { useAppParams } from \"../../hooks/useAppParams\";\n// import {\n//   getGenerationGeno,\n//   getGenerationPheno,\n//   getHistory,\n// } from \"../../redux/history/history-actions\";\n// import HistoryGeneration from \"./generation/HistoryGeneration\";\n// import HistoryGraph from \"./graph/HistoryGraph\";\n// import HistoryModal from \"./modal/HistoryModal\";\n\nconst HistoryPage = () => {\n  // const { caseId } = useAppParams();\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   if (caseId) {\n  //     dispatch(getHistory(caseId));\n  //     dispatch(getGenerationGeno(caseId));\n  //     dispatch(getGenerationPheno(caseId));\n  //   }\n  // }, [dispatch, caseId]);\n\n  return (\n    <div className={scss.root}>\n      <HistoryGraph />\n      <HistoryGeneration />\n      {/* <HistoryModal /> */}\n    </div>\n  );\n};\n\nexport default HistoryPage;\n","export const cl = (\n  ...classes: Array<string | boolean | undefined | null>\n): string => classes.map((item) => item || undefined).join(\" \");\n"],"names":["analyticsAPI","commonApi","endpoints","build","getCaseMetric","query","_ref","caseId","url","concat","getPipelineResult","_ref2","pipeline_uid","getGenerations","_ref3","type","pipelineAPI","getPipeline","uid","providesTags","validatePipeline","mutation","pipeline","method","body","nodes","edges","addPipeline","getPipelineImage","_ref$hasBlackout","hasBlackout","className","_jsx","cl","scss","children","Loader","color","secondaryColor","height","width","CustomTooltip","styled","Tooltip","tooltip","margin","useAppParams","useParams","HistoryGenerationBoxplot","generation","data","useMemo","series","slice","reverse","map","i","_objectSpread","name","Plot","layout","t","b","l","r","length","showlegend","yaxis","fixedrange","xaxis","rangemode","config","displayModeBar","memo","BUTTONS","_useState2","_slicedToArray","useState","generationType","setGenerationType","_analyticsAPI$useGetG","skip","isFetching","isError","_jsxs","item","onClick","AppLoader","undefined","composerAPI","getHistoryGraph","createHistoryGraph","container","linksData","nodesData","highlightNodes","onClickPipeline","onDblClickPipeline","zoom","setZoom","links","d","nodesIndividual","filter","nodesOperator","uniqGenerations","Array","from","Set","gen_id","_container$getBoundin","getBoundingClientRect","svg","d3","append","attr","call","on","event","svgGroup","transform","target","stopPropagation","node","find","textContent","g","dagreD3","compound","setGraph","rankdir","ranker","align","setDefaultEdgeLabel","forEach","nameG","setNode","label","labelStyle","clusterLabelPos","style","setParent","String","class","includes","shape","toUpperCase","v","rx","ry","haveSource","hasNode","source","haveTarget","setEdge","curve","render","gHeight","graph","gWidth","viewHeight","viewWidth","x","y","k","xCenterOffset","yCenterOffset","destroy","remove","onClose","navigate","useNavigate","dispatch","useDispatch","handleEditPipeline","useCallback","setPipelineUid","individual_id","_pipelineAPI$useGetPi","Dialog","open","IconButton","CloseIcon","src","staticAPI","image_url","alt","Button","disabled","graphRef","useRef","_composerAPI$useGetHi","useGetHistoryGraphQuery","highlightPipelines","setHighlightPipelines","_useState4","nodeModal","setNodeModal","handleSelectReset","handleModalClose","useEffect","current","value","arr","fun","pipelineUid","push","apply","_toConsumableArray","ref","title","placement","FormatColorResetIcon","HistoryModal","HistoryGraph","HistoryGeneration","_len","arguments","classes","_key","join"],"sourceRoot":""}